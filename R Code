library(tidyverse)
qpcr <- read.csv("p150KO.csv", stringsAsFactors = FALSE, header = TRUE)

#remove column x
qpcr$X <- NULL

#reorganize columns
qpcr2 <- qpcr %>% spread(Sample, Ct)

#start with just tubulin
#make data set with tubulin values only
tub1 <- qpcr2 %>% select(Task, Tub_1)
tub2 <- qpcr2 %>% select(Task, Tub_2)
tubulin <- inner_join(tub1, tub2)

#calculate the average Tubulin for each row (includes all samples)
qpcr2$tubulin_ref <- apply(qpcr2[,8:9], 1, mean)

#show only tubulin ct values and tubulin avg
tubulin$tub_avg <- apply(qpcr2[,8:9], 1, mean)

#exctract IFNb Ct values, make table
ifn1 <- qpcr2 %>% select(Task, IFNb_1)
ifn2 <- qpcr2 %>% select(Task, IFNb_2)
ifn <- inner_join(ifn1, ifn2)

#join tubulin ct, tubulin avg, and IFNb ct values
ifn_tub <- inner_join(tubulin, ifn)

#calculate dCT 
ifn_tub$dCT_1 <- (ifn_tub$IFNb_1 - ifn_tub$tub_avg)
ifn_tub$dCT_2 <- (ifn_tub$IFNb_2 - ifn_tub$tub_avg)

#find average of control dCt (row 1)
ifn_tub$ifn_control <- apply(ifn_tub[1, 8:9], 1, mean)



#CODE FOR LATER: standard dev
# Find means per column with `apply()`
dataPoints_means <- apply(dataPoints, 2, mean)

# Find standard deviation with `apply()`
dataPoints_sdev <- apply(dataPoints, 2, sd)

#find avg dCT just for control cell line
Lenti1 <- subset(ifn_tub, Task == "Lenti_1")
Lenti2 <- subset(ifn_tub, Task == "Lenti_2")
rbind(Lenti1, Lenti2)
ifn_tub$len_avg <- mean(lenti$ifn_control)
