library(tidyverse)
qpcr <- read.csv("p150KO.csv", stringsAsFactors = FALSE, header = TRUE)

#remove column x
qpcr$X <- NULL

#reorganize columns
qpcr2 <- qpcr %>% spread(Sample, Ct)

#start with just tubulin
#make data set with tubulin values only
tub1 <- qpcr2 %>% select(Task, Tub_1)
tub2 <- qpcr2 %>% select(Task, Tub_2)
tubulin <- inner_join(tub1, tub2)

#calculate the average Tubulin for each row (includes all samples)
qpcr2$tubulin_ref <- apply(qpcr2[,8:9], 1, mean)

#show only tubulin ct values and tubulin avg
tubulin$tub_avg <- apply(qpcr2[,8:9], 1, mean)

#exctract IFNb Ct values, make table
ifn1 <- qpcr2 %>% select(Task, IFNb_1)
ifn2 <- qpcr2 %>% select(Task, IFNb_2)
ifn <- inner_join(ifn1, ifn2)

#join tubulin ct, tubulin avg, and IFNb ct values
ifn_tub <- inner_join(tubulin, ifn)

#calculate dCT 
ifn_tub$dCT_1 <- (ifn_tub$IFNb_1 - ifn_tub$tub_avg)
ifn_tub$dCT_2 <- (ifn_tub$IFNb_2 - ifn_tub$tub_avg)

#find average of control dCt (row 1)
ifn_tub$ifn_control <- apply(ifn_tub[1, 8:9], 1, mean)

Lenti1 <- subset(ifn_tub, Task == "Lenti_1")
Lenti2 <- subset(ifn_tub, Task == "Lenti_2")
lenti <- rbind(Lenti1, Lenti2)
ifn_tub$len_avg <- mean(lenti$ifn_control)

#Calc ddCt: dCt - len_avg
ifn_tub$ddCt_1 <- (ifn_tub$dCt_1 - ifn_tub$len_avg)
ifn_tub$ddCt_2 <- (ifn_tub$dCt_2 - ifn_tub$len_avg)

#Calc fold change: 2^(-ddCt_x)
2^(-ifn_tub$ddCt_1)
ifn_tub$fold_1 <- 2^(-ifn_tub$ddCt_1)
ifn_tub$fold_2 <- 2^(-ifn_tub$ddCt_2)

#Calc average fold change/row
ifn_tub$avg_fold <- rowMeans(subset(ifn_tub, select = c(fold_1, fold_2)), na.rm = TRUE)

n.colmeans = function(df, n = 10){
  aggregate(x = df,
  by = list(gl(ceiling(nrow(df)/n), n)[1:nrow(df)]),
  FUN = mean)
}
stats <- n.colmeans(ifn_tub, 2)
col_stats <- data.frame("Cell", "Fold_avg" = stats$avg_fold) 
col_stats$X.Cell.<- c("cat_11","cat_9", "KO", "Lenti", "p150_11", "p150_8")

#group rows
cat_11 <- ifn_tub[1:2, 13:14]
cat_9 <- ifn_tub[3:4, 13:14]
KO <- ifn_tub[5:6, 13:14]
Lenti <- ifn_tub[7:8, 13:14]
p150_11 <- ifn_tub[9:10, 13:14]
p150_8 <- ifn_tub[11:12, 13:14]

#Separate biological replicates from technical replicates
library(dplyr)
ifn_tub <- data.frame(x = c("cat_11.1", "cat_11.2", "cat_9.1", "cat_9.2", "KO_1", "KO_2", "Lenti_1", "Lenti_2", "p150_11.1", "p150_11.2", "p150_8.1", "p150_8.2"))
ifn_tub %>% separate(x, c("key", "value"), ".", extra = "warn")
